Clean up Directory: add static functions: getFiles(<path>) getDirectories(<path>) etc.
add function: getDirectoryFromPath() <- similar to getFilenameFromPath()
naming convection -> use load/save (instaed of read/write)
fix error checking; functions like MLIB_WARNING should always be there -- bounds check not

Update triMeshAcceleratorBVH to parameterize parallel build and possibly support parelll build for midpoint.
toString for vec1/2/4

Matthias:
MeshIO -> std::vector<std::vector<unsigned int>> -> std::vector<unsigned int> (prefix sum; speed!) (bool flag isTriMesh)
MeshIO -> material groups (.obj loader -> index faces)
MeshIO -> conversion to TriMesh

OBB2f

parameterize ml::shapes

Intersections/Collision: 
mesh - mesh; ideal std::vector<std::pair<triMesh*, mat4f>> - std::vector<std::pair<triMesh*, mat4f>>
BVH: Triangle -> Primitive (to support Vertices)
Mesh - Ray
Mesh - Line
Mesh - OBB (get NR eigenvalue computation into matrix3x3)

OnMeshLoad: reduces to lower res mesh for collisison (maybe in quadedge)`

D3D11: Culling + Shading
Shapes: Cylinder, Torus, Sphere

Grid3's ordering is strange: return m_data[z*m_dimY*m_dimX + x*m_dimY + y];
should be z * dimX * dimY + y * dimX + x