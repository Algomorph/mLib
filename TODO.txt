Update triMeshAcceleratorBVH to parameterize parallel build and possibly support parelll build for midpoint.
toString for vec1/2/4

Matthias:
MeshIO -> std::vector<std::vector<unsigned int>> -> std::vector<unsigned int> (prefix sum; speed!) (bool flag isTriMesh)
MeshIO -> material groups (.obj loader -> index faces)
MeshIO -> conversion to TriMesh

OBB2f

parameterize ml::shapes

Intersections/Collision: 
mesh - mesh; ideal std::vector<std::pair<triMesh*, mat4f>> - std::vector<std::pair<triMesh*, mat4f>>
BVH: Triangle -> Primitive (to support Vertices)
Mesh - Ray
Mesh - Line
Mesh - OBB (get NR eigenvalue computation into matrix3x3)

OnMeshLoad: reduces to lower res mesh for collisison (maybe in quadedge)`




D3D11: Culling + Shading
Shapes: Cylinder, Torus, Sphere

Matthias:
util::concatenate a vector of strings